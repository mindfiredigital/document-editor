"use strict";(self.webpackChunkdocument=self.webpackChunkdocument||[]).push([[4235],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var a=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(t),u=r,m=d["".concat(s,".").concat(u)]||d[u]||g[u]||o;return t?a.createElement(m,l(l({ref:n},p),{},{components:t})):a.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},357:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(8168),r=(t(6540),t(5680));const o={sidebar_position:3},l="How to use DOM events",i={unversionedId:"angular/tutorial-basics/dom-handle",id:"angular/tutorial-basics/dom-handle",title:"How to use DOM events",description:"Mastering the handling of DOM events is crucial for effective React development. Below are key events and how to use them:",source:"@site/docs/angular/tutorial-basics/dom-handle.md",sourceDirName:"angular/tutorial-basics",slug:"/angular/tutorial-basics/dom-handle",permalink:"/document-editor/docs/angular/tutorial-basics/dom-handle",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"How to customize style",permalink:"/document-editor/docs/angular/tutorial-basics/customized-style"},next:{title:"References",permalink:"/document-editor/docs/category/references-1"}},s={},c=[{value:"Retrieving Page Value",id:"retrieving-page-value",level:2},{value:"Capturing Selected Text",id:"capturing-selected-text",level:2},{value:"Setting Page Value",id:"setting-page-value",level:2}],p={toc:c},d="wrapper";function g(e){let{components:n,...o}=e;return(0,r.yg)(d,(0,a.A)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"how-to-use-dom-events"},"How to use DOM events"),(0,r.yg)("p",null,"Mastering the handling of DOM events is crucial for effective React development. Below are key events and how to use them:"),(0,r.yg)("h2",{id:"retrieving-page-value"},"Retrieving Page Value"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"on_change"),": This event triggers when the value of an input page changes."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Angular Component")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"export class AppComponent {\n  handleChange(data) {\n    console.log('test ->', data);\n  }\n}\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-html"},'<DocumentEditor (on_change)="handleChange($event)" </DocumentEditor>\n'))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Web Component for React")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'function App() {\n  const editorRef = useRef(null);\n\n  // Convert object to string because Web Components expect string attributes\n  const toolBarItems = JSON.stringify({\n    bold: true,\n    italic: true,\n    underline: true,\n    image: false,\n    undo: true,\n    redo: true,\n  });\n\n  useEffect(() => {\n    const editor = editorRef.current;\n\n    if (editor) {\n      const handleChange = event => {\n        console.log(\'Content changed:\', event.detail);\n      };\n\n      // Attach custom event listeners\n      editor.addEventListener(\'on_change\', handleChange);\n\n      return () => {\n        editor.removeEventListener(\'on_change\', handleChange);\n      };\n    }\n  }, []);\n\n  return (\n    <div className="App">\n      <web-doc\n        ref={editorRef}\n        value="Hello world"\n        toolbar={toolBarItems}\n        toolbar_class="toolbar_class"\n        canvas_class="canvas_class"\n      ></web-doc>\n    </div>\n  );\n}\n'))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Web Component for JavaScript")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-html"},'\x3c!-- In you html file add following code in a body tag where you want to use react canvas editor --\x3e\n<body>\n  <web-doc\n    id="editor"\n    value="Hello Web Component!"\n    toolbar="${toolbarJson}"\n    toolbar_class="${toolbarClassJson}"\n  ></web-doc>\n  <script type="module" src="/main.js"><\/script>\n</body>\n;\n')),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"// In main.js file(i.e. used as a script in html file) add the following code\nimport '@angular/compiler'; // Ensure this is installed\nimport '@mindfiredigital/angular-canvas-editor';\n\n// Define toolbar items\nconst toolBarItems = {\n  bold: true,\n  italic: true,\n  underline: true,\n  image: false,\n  undo: true,\n  redo: true,\n};\n\n// Define toolbar class styles\nconst toolbar_class = {\n  item: {\n    bold: {\n      'background-color': 'red',\n      color: 'white',\n    },\n    selectedToolbarItemColor: {\n      color: 'white',\n    },\n  },\n};\n\nsetTimeout(() => {\n  const editor = document.getElementById('editor');\n  editor.setAttribute('toolbar', JSON.stringify(toolBarItems));\n  editor.setAttribute('toolbar_class', JSON.stringify(toolbar_class));\n  if (editor) {\n    editor.addEventListener('on_change', event => {\n      console.log('Content changed:', event.detail);\n    });\n\n    editor.addEventListener('on_select', event => {\n      console.log('Content selected:', event.detail);\n    });\n  }\n}, 0);\n")),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{alt:"Get value from page",src:t(5819).A,width:"1920",height:"932"})))),(0,r.yg)("h2",{id:"capturing-selected-text"},"Capturing Selected Text"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"on_select"),": This event activates when text on the page is selected."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Angular Component")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"export class AppComponent {\n  handleSelect(data) {\n    console.log('test ->', data);\n  }\n}\n")))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-html"},'  <DocumentEditor (on_select)="handleSelect($event)" </DocumentEditor>\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Web Component for React")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'const handleSelectedText = text => {\n  console.log(text);\n};\n\nDocumentEditorWebComponent({ on_select: handleSelectedText });\n\nexport const App = () => <div id="document-editor"></div>;\n'))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Web Component for JavaScript")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-html"},'\x3c!-- In you html file add following code in a body tag where you want to use react canvas editor --\x3e\n<body>\n  <div id="document-editor"></div>\n  <script type="module" src="/main.js"><\/script>\n</body>\n;\n')),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"// In main.js file(i.e. used as a script in html file) add the following code\nconst handleSelectedText = text => {\n  console.log(text);\n};\n\nDocumentEditorWebComponent({ on_select: handleSelectedText });\n")))),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Get select text from page",src:t(2787).A,width:"1440",height:"789"})),(0,r.yg)("h2",{id:"setting-page-value"},"Setting Page Value"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"value"),": To assign a value to an input page, use the value attribute."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"React Component")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'export const App = () => {\n  return <DocumentEditor value="Hello world" />;\n};\n'))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Web Component for React")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"DocumentEditorWebComponent({ value='Hello world' });\n\nexport const App = () => <div id='document-editor'></div>;\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Web Component for JavaScript")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-html"},'\x3c!-- In you html file add following code in a body tag where you want to use react canvas editor --\x3e\n<body>\n  <div id="document-editor"></div>\n  <script type="module" src="/main.js"><\/script>\n</body>\n;\n')),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"// In main.js file(i.e. used as a script in html file) add the following code\nDocumentEditorWebComponent({ value='Hello world' });\n")))),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"value",src:t(8907).A,width:"1440",height:"900"})),(0,r.yg)("p",null,"By following these steps, you can proficiently work with DOM events in React, enhancing your application's functionality."))}g.isMDXComponent=!0},5819:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/onChange-b0328f0d3b7c6e1da2f0975c31029f64.png"},2787:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/onSelect-d079924ebb3107358f918217c4d6f896.png"},8907:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/setValue-a2b453565e825d2359e2bfd706670fe0.png"}}]);